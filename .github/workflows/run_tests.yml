name: Unit Tests

on:
  push:
    branches:
      - '*'
  pull_request:
    branches:
      - '*'

jobs:
  run_linter:
    runs-on: ${{ matrix.config.os }}
    if: "!contains(github.event.head_commit.message, 'ci skip')"

    strategy:
      fail-fast: false
      matrix:
        config:
        - {name: 'current', os: ubuntu-latest, python: '3.10' }

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.config.python }}

    - name: Install tools
      run: |
        python -m pip install --upgrade pip
        pip install --use-deprecated=legacy-resolver -U wheel setuptools
        pip install --use-deprecated=legacy-resolver -U black flake8
    - name: Lint with Black
      run: |
        black . --check --diff
    - name: Lint with flake8
      run: |
        flake8 meld
  run_tester:
    runs-on: ${{ matrix.config.os }}
    if: "!contains(github.event.head_commit.message, 'ci skip')"
    env:
      RENV_PATHS_ROOT: ~/.local/share/renv

    strategy:
      fail-fast: false
      matrix:
        config:
        - {name: 'current', os: ubuntu-latest, python: '3.10', r: 'release' }
        - {name: 'prev', os: ubuntu-latest, python: '3.9', r: 'release' }
        - {name: 'old', os: ubuntu-latest, python: '3.8', r: 'release' }
        - {name: 'older', os: ubuntu-latest, python: '3.7', r: 'release' }

    steps:
    - name: Cancel Previous Runs
      uses: styfle/cancel-workflow-action@0.6.0
      with:
        access_token: ${{ github.token }}

    - uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Install system dependencies
      if: runner.os == 'Linux'
      run: |
        sudo apt-get update -qq
        sudo apt-get install -y libhdf5-dev pandoc gfortran libblas-dev liblapack-dev libedit-dev llvm-dev libcurl4-openssl-dev
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.config.python }}

    - name: Cache Python packages
      uses: actions/cache@v2
      with:
        path: ${{ env.pythonLocation }}
        key: ${{runner.os}}-pip-${{ env.pythonLocation }}-${{ hashFiles('setup.py') }}
        restore-keys: ${{runner.os}}-pip-${{ env.pythonLocation }}-

    - name: Install package & dependencies
      run: |
        python -m pip install --upgrade "pip<=21.0"
        pip install --use-deprecated=legacy-resolver -U wheel setuptools
        pip install --use-deprecated=legacy-resolver -U .[test,r]
        python -c "import meld"

    - name: Run tests
      run: nose2 -vvv

    - name: Coveralls
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        coveralls --service=github

    - name: Upload check results on fail
      if: failure()
      uses: actions/upload-artifact@master
      with:
        name: ${{ matrix.config.name }}_results
        path: check
